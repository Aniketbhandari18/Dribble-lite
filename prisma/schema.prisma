// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String
  firstName String
  lastName  String
  avatar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
  likes Like[]
  views View[]
  comments Comment[]
}

model Post {
  id            String   @id @default(cuid())
  createdById   String
  imageUrl      String
  title         String
  description   String?
  tags          Tag[]    @default([])
  likesCount    Int      @default(0)
  viewCount     Int      @default(0)
  commentsCount Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  likedBy     Like[]
  viewedBy    View[]
  commentedBy Comment[]

  createdBy User @relation(fields: [createdById], references: [id])

  @@index([title])
}

model Like {
  id        String   @id @default(cuid())
  likedById String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  likedBy User @relation(fields: [likedById], references: [id])
  post    Post @relation(fields: [postId], references: [id])

  @@unique([likedById, postId])
}

model View {
  id         String   @id @default(cuid())
  viewedById String
  postId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  viewedBy User @relation(fields: [viewedById], references: [id])
  post     Post @relation(fields: [postId], references: [id])

  @@unique([viewedById, postId])
}

model Comment {
  id            String   @id @default(cuid())
  commentedById String
  postId        String
  content       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  commentedBy User @relation(fields: [commentedById], references: [id])
  post        Post @relation(fields: [postId], references: [id])
}

enum Tag {
  UI
  UX
  WebDesign
  MobileApp
  Logo
  Illustration
  Typography
  Dashboard
  LandingPage
  Animation
  Branding
  IconSet
  Minimal
  DarkMode
  LightMode
}
